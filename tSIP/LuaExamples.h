struct LuaExample
{
	char* name;
	char* lua;
};
const LuaExample luaExamples [] =
{
	{
	"Beep",

	"-- ShowMessage(\"Press \\\"Break\\\" to stop\")\n"
	"pattern =\n"
	"{\n"
	"-- frequency, time\n"
	"{392 \t,350}, \n"
	"{392 \t,350}, \n"
	"{392 \t,350}, \n"
	"{311 \t,250}, \n"
	"{466 \t,250},\n"
	"{392 \t,350}, \n"
	"{311 \t,250}, \n"
	"{466 \t,250},\n"
	"{392 \t,700}, \n"
	"{587 ,350}, \n"
	"{587 ,350}, \n"
	"{587 ,350}, \n"
	"{622 ,250}, \n"
	"{466 \t,250},\n"
	"{369 ,350}, \n"
	"{311 \t,250}, \n"
	"{466 \t,250},\n"
	"{392 \t,700}, \n"
	"{784 \t,350}, \n"
	"{392 \t,250}, \n"
	"{392 \t,250},\n"
	"{784 \t,350}, \n"
	"{739 ,250}, \n"
	"{698 ,250},\n"
	"{659 ,250},\n"
	"{622 ,250},\n"
	"{659 ,500}, \n"
	"{0, 300},\n"
	"{415 \t,250},\n"
	"{0,100},\n"
	"{554 ,350}, \n"
	"{523 ,250}, \n"
	"{493 ,250},\n"
	"{466 ,250},\n"
	"{440 \t,250},\n"
	"{466 ,500}, \n"
	"{0,300},\n"
	"{311 ,250},\n"
	"{0,100},\n"
	"{369 ,350}, \n"
	"{311 ,250}, \n"
	"{392 \t,250},\n"
	"{466 ,350}, \n"
	"{392 \t,250}, \n"
	"{466 ,250},\n"
	"{587 ,700}, \n"
	"{784 \t,350}, \n"
	"{392 \t,250}, \n"
	"{392 \t,250}, \n"
	"{784 \t,350}, \n"
	"{739 ,250}, \n"
	"{698 ,250},\n"
	"{659 ,250},\n"
	"{622 ,250},\n"
	"{659 ,500}, \n"
	"{0,300},\n"
	"{415 \t,250},\n"
	"{0,100},\n"
	"{554 ,350}, \n"
	"{523 ,250}, \n"
	"{493 ,250},\n"
	"{466 ,250},\n"
	"{440 \t,250},\n"
	"{466 ,500},\n"
	"{0,300}, \n"
	"{311 ,250},\n"
	"{0,200}, \n"
	"{392 \t,250}, \n"
	"{311 ,250}, \n"
	"{466 ,250},\n"
	"{392 ,300}, \n"
	"{0,500},\n"
	"{311 ,250}, \n"
	"\n"
	"}\n"
	"\n"
	"local winapi = require(\"tsip_winapi\")\n"
	"\n"
	"for i = 1, #pattern do\n"
	"\twinapi.Beep(pattern[i][1], pattern[i][2])\n"
	"\tret = CheckBreak()\n"
	"\tSleep(100)\t-- process Win messages also\n"
	"\t-- break on user request\\n\"\n"
	"\tif ret ~= 0 then\n"
	"\t\tprint ('User break\\n')\n"
	"\t\tbreak\n"
	"\tend\n"
	"end\n"
	""
	},

	{
	"Calling: loop",

	"-- calling specified number in the loop\n"
	"print(string.format(\"Running %s on %s\\n\", _VERSION, os.date()))\n"
	"-- clear digits already in Dial edit to be sure\n"
	"for i = 1, 10 do\n"
	"\tCall(\"2007\")\n"
	"\tSleep(2000)\n"
	"\tHangup()\n"
	"\tSleep(100)\n"
	"\tret = CheckBreak()\n"
	"\t-- break on user request\n"
	"\tif ret ~= 0 then\n"
	"\t\tprint ('User break\\n')\n"
	"\t\tbreak\n"
	"\tend\t\n"
	"end\n"
	"print(\"Done\\n\");"

	},

	{
	"Call + DTMFs",
	
	"-- calling and sending DTMFs\n"
	"print(string.format(\"Running %s on %s\\n\", _VERSION, os.date()))\n"
	"Call(\"2000\")\n"
	"Sleep(5000)\n"
	"-- hoping that 2nd party would answer the call in meantime\n"
	"SendDtmf(\"012345678*#\")\n"
	"-- pause to let digits get out of the queues safely\n"
	"Sleep(3000)\n"
	"Hangup()\n"
	"print(\"Done\\n\");"
	},

	{
	"Call to specified number (conference room) and enter code",

	"-- user config\n"
	"number = \"123456789\"\n"
	"dtmf = \"1234\"\n"
	"-- end of user config\n"
	" \n"
	"Call(number)\n"
	"for i=1, 20, 1\n"
	"do\n"
	"\tif (i == 20) then\n"
	"\t\tprint(\"Timed out waiting for confirmed state\\n\")\n"
	"\t\tbreak;\n"
	"\tend\n"
	" \n"
	"\tSleep(300)\n"
	"\tcall_state = GetCallState()\n"
	"\tif call_state == 6 then\n"
	"\t\t-- CALL_STATE_ESTABLISHED\n"
	"\t\tSleep(2000)\n"
	"\t\tSendDtmf(\"1234\")\n"
	"\t\tbreak\n"
	"\telseif call_state == 0 then\n"
	"\t\t-- CALL_STATE_CLOSED\n"
	"\t\tprint(\"End of call\\n\")\n"
	"\t\tbreak;\n"
	"\tend\n"
	"end\n"
	"print(\"End of script\\n\")  "
	}
	,
	{
	"Count number of times script was executed",
	
	"-- This script counts number of times it was executed\n"
	"local count, var_isset = GetVariable(\"runcount\")\n"
	"if (var_isset == 0) then\n"
	"\tcount = 0\n"
	"else\n"
	"\tcount = tonumber(count)\n"
	"end\n"
	"\n"
	"count = count + 1\n"
	"SetVariable(\"runcount\", count)\n"
	"print(string.format(\"Script executed %d time(s)\\n\", count))  "
	}

};
